{"name": "test_signup[chrome-priyankverma@deloitte.com-Priyank Verma-Pass@123-User account created successfully-An account already exists with the same email address]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x007C8893+48451]\n\t(No symbol) [0x0075B8A1]\n\t(No symbol) [0x00665058]\n\t(No symbol) [0x00690467]\n\t(No symbol) [0x0069069B]\n\t(No symbol) [0x006BDD92]\n\t(No symbol) [0x006AA304]\n\t(No symbol) [0x006BC482]\n\t(No symbol) [0x006AA0B6]\n\t(No symbol) [0x00687E08]\n\t(No symbol) [0x00688F2D]\n\tGetHandleVerifier [0x00A28E3A+2540266]\n\tGetHandleVerifier [0x00A68959+2801161]\n\tGetHandleVerifier [0x00A6295C+2776588]\n\tGetHandleVerifier [0x00852280+612144]\n\t(No symbol) [0x00764F6C]\n\t(No symbol) [0x007611D8]\n\t(No symbol) [0x007612BB]\n\t(No symbol) [0x00754857]\n\tBaseThreadInitThunk [0x75E900C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x76F27B4E+286]\n\tRtlGetAppContainerNamedObjectPath [0x76F27B1E+238]", "trace": "self = <Tests.test_signup.Test_SignupPage object at 0x000001729E236E80>\nemail = 'priyankverma@deloitte.com', name = 'Priyank Verma'\npassword = 'Pass@123', successAlert = 'User account created successfully'\nfailedAlert = 'An account already exists with the same email address'\n\n    @pytest.mark.parametrize(\"email, name, password, successAlert, failedAlert\", Utils.read_data_from_excel(\n        \"C:\\\\Users\\\\priyankverma\\\\PycharmProjects\\\\PytestAssignmentMain\\\\TestData\\\\MyNotesAppData.xlsx\", \"SignupData\"))\n    def test_signup(self, email, name, password, successAlert, failedAlert):\n        self.signupPage = SignupPage(self.driver)\n        self.signupPage.do_signup(email, name, password)\n>       alert_message = self.signupPage.get_success_alert_message()\n\ntest_signup.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\Pages\\SignupPage.py:30: in get_success_alert_message\n    return self.get_element_text(self.SUCCESS_ALERT_MESSAGE)\n..\\Pages\\BasePage.py:20: in get_element_text\n    element = WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eff5d8f8d6197f22939a6e046af897d8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001729D37B820>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x007C8893+48451]\nE       \t(No symbol) [0x0075B8A1]\nE       \t(No symbol) [0x00665058]\nE       \t(No symbol) [0x00690467]\nE       \t(No symbol) [0x0069069B]\nE       \t(No symbol) [0x006BDD92]\nE       \t(No symbol) [0x006AA304]\nE       \t(No symbol) [0x006BC482]\nE       \t(No symbol) [0x006AA0B6]\nE       \t(No symbol) [0x00687E08]\nE       \t(No symbol) [0x00688F2D]\nE       \tGetHandleVerifier [0x00A28E3A+2540266]\nE       \tGetHandleVerifier [0x00A68959+2801161]\nE       \tGetHandleVerifier [0x00A6295C+2776588]\nE       \tGetHandleVerifier [0x00852280+612144]\nE       \t(No symbol) [0x00764F6C]\nE       \t(No symbol) [0x007611D8]\nE       \t(No symbol) [0x007612BB]\nE       \t(No symbol) [0x00754857]\nE       \tBaseThreadInitThunk [0x75E900C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F27B4E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F27B1E+238]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "parameters": [{"name": "init__driver", "value": "'chrome'"}, {"name": "email", "value": "'priyankverma@deloitte.com'"}, {"name": "name", "value": "'Priyank Verma'"}, {"name": "password", "value": "'Pass@123'"}, {"name": "successAlert", "value": "'User account created successfully'"}, {"name": "failedAlert", "value": "'An account already exists with the same email address'"}], "start": 1685342057069, "stop": 1685342071219, "uuid": "b1840d1c-76a0-4ddc-a007-2e9c375973a8", "historyId": "16e9cbd8349439e6372101defac5ea20", "testCaseId": "f9ad4fb2ad24aebe434c36c2d6512f5c", "fullName": "test_signup.Test_SignupPage#test_signup", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init__driver')"}, {"name": "suite", "value": "test_signup"}, {"name": "subSuite", "value": "Test_SignupPage"}, {"name": "host", "value": "USGURPRIYAN01"}, {"name": "thread", "value": "35252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_signup"}]}